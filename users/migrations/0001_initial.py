# Generated by Django 4.2 on 2023-10-29 03:53

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='手机号')),
                ('first_name', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='姓')),
                ('last_name', models.CharField(blank=True, max_length=150, null=True, unique=True, verbose_name='名')),
                ('email', models.CharField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('is_superuser', models.BooleanField(blank=True, default=False, null=True, verbose_name='超级用户')),
                ('is_staff', models.BooleanField(blank=True, default=True, null=True, verbose_name='员工')),
                ('is_active', models.BooleanField(blank=True, default=True, null=True, verbose_name='是否在职')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='上次登陆时间')),
                ('date_joined', models.DateTimeField(blank=True, null=True, verbose_name='创建账户时间')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '员工',
                'verbose_name_plural': '员工',
                'db_table': 'userstore',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
